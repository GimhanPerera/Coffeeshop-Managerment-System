/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package Manager;

import DBconnection.Connect;
import DBconnection.Customer;
import DBconnection.Emp;
import DBconnection.LoyaltyCard;
import DBconnection.cashier;
import DBconnection.getDate;
import java.awt.Component;
import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.JTableHeader;
import javax.swing.table.TableColumn;
import javax.swing.table.TableColumnModel;

/**
 *
 * @author Gimhan
 */
public class SDDetailsPanel extends javax.swing.JPanel {

    /**
     * Creates new form sdDetailsPanel
     */
    public SDDetailsPanel() {
        initComponents();
        lbl_Error.setVisible(false);
        viewALL();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jPanel2 = new javax.swing.JPanel();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        rdo_stuff = new javax.swing.JRadioButton();
        rdo_customer = new javax.swing.JRadioButton();
        btn_clear = new javax.swing.JButton();
        btn_remove = new javax.swing.JButton();
        btn_add = new javax.swing.JButton();
        txt_search = new javax.swing.JTextField();
        btn_search = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        lbl_searchtitle = new javax.swing.JLabel();
        lbl_Error = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(173, 85, 2));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 740, 1170, 30));

        jPanel1.setBackground(new java.awt.Color(173, 85, 2));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());
        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1170, 30));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        jLabel1.setText("Customer/Stuff Details");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 80, -1, -1));

        buttonGroup1.add(rdo_stuff);
        rdo_stuff.setText("Stuff Details");
        rdo_stuff.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdo_stuffActionPerformed(evt);
            }
        });
        add(rdo_stuff, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 210, -1, -1));

        buttonGroup1.add(rdo_customer);
        rdo_customer.setSelected(true);
        rdo_customer.setText("Customer Details");
        rdo_customer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rdo_customerActionPerformed(evt);
            }
        });
        add(rdo_customer, new org.netbeans.lib.awtextra.AbsoluteConstraints(220, 170, -1, -1));

        btn_clear.setText("Clear");
        btn_clear.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_clearActionPerformed(evt);
            }
        });
        add(btn_clear, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 350, 100, 40));

        btn_remove.setText("Remove");
        btn_remove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_removeActionPerformed(evt);
            }
        });
        add(btn_remove, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 620, 110, 40));

        btn_add.setText("Add");
        btn_add.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addActionPerformed(evt);
            }
        });
        add(btn_add, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 569, 110, 40));

        txt_search.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        txt_search.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                txt_searchMouseClicked(evt);
            }
        });
        add(txt_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 200, 220, 40));

        btn_search.setText("Search");
        btn_search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_searchActionPerformed(evt);
            }
        });
        add(btn_search, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 200, 110, 40));

        jButton5.setText("View All");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(1020, 290, 100, 40));

        lbl_searchtitle.setText("Search by Customer Telephone Number");
        add(lbl_searchtitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 160, 300, -1));

        lbl_Error.setForeground(new java.awt.Color(255, 0, 0));
        lbl_Error.setText("Error msg");
        add(lbl_Error, new org.netbeans.lib.awtextra.AbsoluteConstraints(460, 250, 330, -1));

        jTable1.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4", "Title 5"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setRowHeight(29);
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 290, 960, 420));
    }// </editor-fold>//GEN-END:initComponents

    private void viewALL(){
        try{
            clearTable();
            Connect obj = new Connect();
            Connection c = obj.getConnection();//Establish the connection
            cashier obj2=new cashier();
             //int q=1;System.out.println(q++); <- tester
                getDate obj1 =new getDate();
                String date=obj1.dateOnly();
                Statement stmt = c.createStatement();//Prepare statement
                ResultSet rs;
                //customer data
                if(rdo_customer.isSelected()){
                    //Change table header
                    JTableHeader th = jTable1.getTableHeader();
                    TableColumnModel tcm = th.getColumnModel();
                    TableColumn tc = tcm.getColumn(0);
                    tc.setHeaderValue( "Customer ID" );
                    th.repaint();
                    tc = tcm.getColumn(1);
                    tc.setHeaderValue( "Customer Name" );
                    th.repaint();
                    tc = tcm.getColumn(2);
                    tc.setHeaderValue( "Mobile number" );
                    th.repaint();
                    tc = tcm.getColumn(3);
                    tc.setHeaderValue( "Loyalty points");
                    th.repaint();
                    tc = tcm.getColumn(4);
                    tc.setHeaderValue( "Loyalty card" );
                    th.repaint();
                    //tc = tcm.getColumn(5);
                    //tc.setHeaderValue( "Email" );
                    //th.repaint();
                    //
                    rs = stmt.executeQuery("select * FROM CUSTOMER");
                    while(rs.next()){
                        String cID=rs.getString("CUSTOMER_ID");
                        String fname=rs.getString("F_NAME");
                        String lname=rs.getString("L_NAME");
                        String tp=rs.getString("MOBILE_NUMBER");
                        String email=rs.getString("Email");
                        String points=rs.getString("POINTS");
                        String request="No";
                        if(rs.getInt("REQUEST")==1)
                            request="Requested";
                        else if(rs.getInt("REQUEST")==2)
                            request="Have";
                        String tbData[]={cID,fname+" "+lname,tp,points,request,email};
                        DefaultTableModel tblModel =(DefaultTableModel)jTable1.getModel(); 
                        tblModel.addRow(tbData);
                    }
                    btn_add.setEnabled(false); 
                }
                else{
                    //Change table header
                    JTableHeader th = jTable1.getTableHeader();
                    TableColumnModel tcm = th.getColumnModel();
                    TableColumn tc = tcm.getColumn(0);
                    tc.setHeaderValue( "Employee ID" );
                    th.repaint();
                    tc = tcm.getColumn(1);
                    tc.setHeaderValue( "Employee Name" );
                    th.repaint();
                    tc = tcm.getColumn(2);
                    tc.setHeaderValue( "Employee type" );
                    th.repaint();
                    tc = tcm.getColumn(3);
                    tc.setHeaderValue( "Mobile number");
                    th.repaint();
                    tc = tcm.getColumn(4);
                    tc.setHeaderValue( "NIC" );
                    th.repaint();
                    //tc = tcm.getColumn(5);
                    //tc.setHeaderValue( "Email" );
                    //th.repaint();
                    //
                    rs = stmt.executeQuery("select * FROM EMPLOYEE WHERE EMP_ID != 'EM001'");
                    while(rs.next()){
                        String cID=rs.getString("EMP_ID");
                        String name=rs.getString("F_NAME")+" "+rs.getString("L_NAME");
                        String tp=rs.getString("MOBILE_NUMBER");
                        String email=rs.getString("Email");
                        String nic=rs.getString("NIC");
                        String emptype=rs.getString("EMP_TYPE");
                    
                        String tbData[]={cID,name,emptype,tp,nic,email};
                        DefaultTableModel tblModel =(DefaultTableModel)jTable1.getModel(); 
                        tblModel.addRow(tbData);
                    }
                    btn_add.setEnabled(true);                    
                }
                if(jTable1.getRowCount()!=0)//check row count
                {
                    jTable1.setRowSelectionInterval(0, 0);
                    btn_remove.setEnabled(true);
                }
                else{
                    btn_remove.setEnabled(false);
                }
        }
        catch(Exception ex)//Is database has a problem, this catch stetment catch it
        {
            Logger.getLogger(FoodDetailsPanel.class.getName()).log(Level.SEVERE, null, ex);
        }
    }
    
    private void btn_addActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addActionPerformed
        if(false){//validation
            
        }
        else{
            clearTable();
            lbl_Error.setVisible(false);
            AddStuffMember obj=new AddStuffMember();
            obj.setVisible(true);
        }
    }//GEN-LAST:event_btn_addActionPerformed

    private void rdo_stuffActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdo_stuffActionPerformed
        lbl_searchtitle.setText("Search by ctuff ID");
    }//GEN-LAST:event_rdo_stuffActionPerformed

    private void rdo_customerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rdo_customerActionPerformed
        lbl_searchtitle.setText("Search by Customer Telephone Number");
        
    }//GEN-LAST:event_rdo_customerActionPerformed

    private void btn_searchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_searchActionPerformed
        lbl_Error.setVisible(false);
        if(false){//validation need to handle
            
        }
        else{
            try{
            clearTable();
            Connect obj = new Connect();
            Connection c = obj.getConnection();//Establish the connection
            cashier obj2=new cashier();
             //int q=1;System.out.println(q++); <- tester
                getDate obj1 =new getDate();
                String date=obj1.dateOnly();
                Statement stmt = c.createStatement();//Prepare statement
                ResultSet rs;
                //customer data
                if(rdo_customer.isSelected()){
                    //Change table header
                    JTableHeader th = jTable1.getTableHeader();
                    TableColumnModel tcm = th.getColumnModel();
                    TableColumn tc = tcm.getColumn(0);
                    tc.setHeaderValue( "Customer ID" );
                    th.repaint();
                    tc = tcm.getColumn(1);
                    tc.setHeaderValue( "Customer Name" );
                    th.repaint();
                    tc = tcm.getColumn(2);
                    tc.setHeaderValue( "Mobile number" );
                    th.repaint();
                    tc = tcm.getColumn(3);
                    tc.setHeaderValue( "Loyalty points");
                    th.repaint();
                    tc = tcm.getColumn(4);
                    tc.setHeaderValue( "Loyalty card" );
                    th.repaint();
                    //tc = tcm.getColumn(5);
                    //tc.setHeaderValue( "Email" );
                    //th.repaint();
                    //
                    rs = stmt.executeQuery("select * FROM CUSTOMER WHERE MOBILE_NUMBER='"+txt_search.getText()+"'");
                    while(rs.next()){
                        String cID=rs.getString("CUSTOMER_ID");
                        String fname=rs.getString("F_NAME");
                        String lname=rs.getString("L_NAME");
                        String tp=rs.getString("MOBILE_NUMBER");
                        String email=rs.getString("Email");
                        String points=rs.getString("POINTS");
                        String request="No";
                        if(rs.getInt("REQUEST")==1)
                            request="Requested";
                        else if(rs.getInt("REQUEST")==2)
                            request="Have";
                        String tbData[]={cID,fname+" "+lname,tp,points,request,email};
                        DefaultTableModel tblModel =(DefaultTableModel)jTable1.getModel(); 
                        tblModel.addRow(tbData);
                    }
                    btn_add.setEnabled(false); 
                }
                else{
                    //Change table header
                    JTableHeader th = jTable1.getTableHeader();
                    TableColumnModel tcm = th.getColumnModel();
                    TableColumn tc = tcm.getColumn(0);
                    tc.setHeaderValue( "Employee ID" );
                    th.repaint();
                    tc = tcm.getColumn(1);
                    tc.setHeaderValue( "Employee Name" );
                    th.repaint();
                    tc = tcm.getColumn(2);
                    tc.setHeaderValue( "Employee type" );
                    th.repaint();
                    tc = tcm.getColumn(3);
                    tc.setHeaderValue( "Mobile number");
                    th.repaint();
                    tc = tcm.getColumn(4);
                    tc.setHeaderValue( "NIC" );
                    th.repaint();
                    //tc = tcm.getColumn(5);
                    //tc.setHeaderValue( "Email" );
                    //th.repaint();
                    //
                    rs = stmt.executeQuery("select * FROM EMPLOYEE WHERE EMP_ID != 'EM001' AND EMP_ID='"+txt_search.getText()+"'");
                    while(rs.next()){
                        String cID=rs.getString("EMP_ID");
                        String name=rs.getString("F_NAME")+" "+rs.getString("L_NAME");
                        String tp=rs.getString("MOBILE_NUMBER");
                        String email=rs.getString("Email");
                        String nic=rs.getString("NIC");
                        String emptype=rs.getString("EMP_TYPE");
                    
                        String tbData[]={cID,name,emptype,tp,nic,email};
                        DefaultTableModel tblModel =(DefaultTableModel)jTable1.getModel(); 
                        tblModel.addRow(tbData);
                    }
                    btn_add.setEnabled(true);
                }  
            if(jTable1.getRowCount()!=0)//check row count
            {
                jTable1.setRowSelectionInterval(0, 0);
                btn_remove.setEnabled(true);               
            }
            else{
                btn_remove.setEnabled(false);
            }
        }
        catch(Exception ex)//Is database has a problem, this catch stetment catch it
        {
            Logger.getLogger(FoodDetailsPanel.class.getName()).log(Level.SEVERE, null, ex);
            lbl_Error.setVisible(true);
            lbl_Error.setText("No result. Please check entered value");
        }
        }
    }//GEN-LAST:event_btn_searchActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        lbl_Error.setVisible(false);
        viewALL();
    }//GEN-LAST:event_jButton5ActionPerformed

    private void btn_clearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_clearActionPerformed
        lbl_Error.setVisible(false);
        clearTable();
        btn_remove.setEnabled(false);
    }//GEN-LAST:event_btn_clearActionPerformed

    private void btn_removeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_removeActionPerformed
        lbl_Error.setVisible(false);
        int result = JOptionPane.showConfirmDialog((Component) null, "Your order will cancel and you need to order again",
        "alert", JOptionPane.YES_NO_OPTION);
        System.out.println(result);
        if(result==0){
            try {
                int row=jTable1.getSelectedRow();
                String a=(String) jTable1.getValueAt(row, 0);
                if(rdo_customer.isSelected()){
                    Customer obj=new Customer();
                    //NEED TO CODE
                    //int check=obj.removeCastomer(a);
                }
                else{
                    Emp obj=new Emp();
                    //NEED TO CODE
                    //int check=obj.removeEmp(a);
                }
                viewALL();
            } catch (Exception ex) {
                Logger.getLogger(LoyaltyCardPanel.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
    }//GEN-LAST:event_btn_removeActionPerformed

    private void txt_searchMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_txt_searchMouseClicked
        txt_search.setText("");
    }//GEN-LAST:event_txt_searchMouseClicked
    
    public void clearTable(){
        DefaultTableModel tblModel =(DefaultTableModel)jTable1.getModel(); 
        int rowCount = tblModel.getRowCount();
        //Remove rows one by one from the end of the table
        for (int i = rowCount - 1; i >= 0; i--) {
            tblModel.removeRow(i);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_add;
    private javax.swing.JButton btn_clear;
    private javax.swing.JButton btn_remove;
    private javax.swing.JButton btn_search;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JLabel lbl_Error;
    private javax.swing.JLabel lbl_searchtitle;
    private javax.swing.JRadioButton rdo_customer;
    private javax.swing.JRadioButton rdo_stuff;
    private javax.swing.JTextField txt_search;
    // End of variables declaration//GEN-END:variables
}
